// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`for_each: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "let sum = 0;
stream_for_each(x => {
  sum = sum + x;
}, stream(1, 2, 3));
sum;",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": 6,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`list_ref: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "stream_ref(stream(1, 2, 3, \\"4\\", 4), 4);",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": 4,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`primitive stream functions empty stream is null: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "stream();",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": null,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`primitive stream functions stream is properly created: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "const s = stream(true, false, undefined, 1, x=>x, null, -123, head);
const result = [];
stream_for_each(item => {result[array_length(result)] = item;}, s);
stream_ref(s,4)(22) === 22 && stream_ref(s,7)(pair('', '1')) === '1' && result;",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": false,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`primitive stream functions stream_tail is lazy: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "stream_tail(integers_from(0));",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": "native:[1, () => integers_from(n + 1)]
interpreted:undefined",
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`primitive stream functions stream_tail works: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "head(stream_tail(stream(1, 2)));",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": 2,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`primitive stream functions stream_to_list works for null: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "stream_to_list(null);",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": null,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`primitive stream functions stream_to_list works: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "stream_to_list(stream(1, true, 3, 4.4, [1, 2]));",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": Array [
    1,
    Array [
      true,
      Array [
        3,
        Array [
          4.4,
          Array [
            Array [
              1,
              2,
            ],
            null,
          ],
        ],
      ],
    ],
  ],
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`remove: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "stream_remove(1, stream(1));",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": null,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;
